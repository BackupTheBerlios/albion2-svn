# Sub-makefile autogenerated by premake

ifndef CONFIG
  CONFIG=Debug
endif

OUTDIR =
BINDIR =
LIBDIR =
CFLAGS =
CPPFLAGS =
LDFLAGS = -L$(BINDIR) -L$(LIBDIR)
ifeq ($(CONFIG),Debug)
BINDIR = ../bin
LIBDIR = ../lib
OUTDIR = $(BINDIR)
OBJDIR = obj

  CPPFLAGS = -MD -D "WIN32"
  CFLAGS += $(CPPFLAGS)
  CXXFLAGS = $(CFLAGS)
  LDFLAGS += -lopengl32 -lglu32 -lglaux -lSDL -lSDLmain -lSDL_net -lSDL_image -lftgl_dynamic_MTD -lode
  TARGET = obj2a2m
endif
ifeq ($(CONFIG),Release)
BINDIR = ../bin
LIBDIR = ../lib
OUTDIR = $(BINDIR)
OBJDIR = obj

  CPPFLAGS = -MD -D "WIN32"
  CFLAGS += $(CPPFLAGS) -O2
  CXXFLAGS = $(CFLAGS)
  LDFLAGS += -lopengl32 -lglu32 -lglaux -lSDL -lSDLmain -lSDL_net -lSDL_image -lftgl_dynamic_MTD -lode
  TARGET = obj2a2m
endif

$(OBJDIR)/%.o : %.cc
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.cpp
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.cxx
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.c
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CC) $(CFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.s
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CC) -x assembler-with-cpp $(CPPFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

OBJECTS = \
	$(OBJDIR)/obj2a2m.o \

VPATH =

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS)
	@echo Linking obj2a2m
	-@if [ ! -d $(BINDIR) ]; then mkdir -p $(BINDIR); fi
	-@if [ ! -d $(LIBDIR) ]; then mkdir -p $(LIBDIR); fi
	@$(CXX) -o $@ $(filter-out %.so, $^) $(LDFLAGS)

clean:
	@echo Cleaning obj2a2m
	-@rm -rf $(OUTDIR)/$(TARGET) $(OBJDIR)/*

-include $(OBJECTS:%.o=%.P)

