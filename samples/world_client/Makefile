# Sub-makefile autogenerated by premake

ifndef CONFIG
  CONFIG=Debug
endif

# Forward declare all of my variables
OUTDIR =
OBJDIR =
BINDIR =
LIBDIR =
CFLAGS =
CPPFLAGS =
LDFLAGS =
ifeq ($(CONFIG),Debug)
  BINDIR = ../../bin
  LIBDIR = ../../lib
  OUTDIR = $(BINDIR)
  OBJDIR = obj

  CPPFLAGS = -MD -I ../../src -I /usr/include -I /usr/include/freetype2 -I /usr/include/FTGL -I /usr/include/ode -I /usr/include/opcode -I /usr/include/opcode/ICE
  CFLAGS += $(CPPFLAGS) -Os -c `sdl-config --cflags`
  CXXFLAGS = $(CFLAGS)
  LDFLAGS +=  -fPic `sdl-config --libs` -L jpeglib -L zlib -L ../../lib -L /usr/lib -L /usr/lib -L /usr/lib -lGL -lGLU -lz -ljpeg -la2e -lSDL_net -lSDL_image -lode -lOPCODE -lfreetype -lftgl
  TARGET = ../samples/bin/world_client
endif
ifeq ($(CONFIG),Release)
  BINDIR = ../../bin
  LIBDIR = ../../lib
  OUTDIR = $(BINDIR)
  OBJDIR = obj

  CPPFLAGS = -MD -I ../../src -I /usr/include -I /usr/include/freetype2 -I /usr/include/FTGL -I /usr/include/ode -I /usr/include/opcode -I /usr/include/opcode/ICE
  CFLAGS += $(CPPFLAGS) -Os -c `sdl-config --cflags` -O2
  CXXFLAGS = $(CFLAGS)
  LDFLAGS +=  -fPic `sdl-config --libs` -L jpeglib -L zlib -L ../../lib -L /usr/lib -L /usr/lib -L /usr/lib -lGL -lGLU -lz -ljpeg -la2e -lSDL_net -lSDL_image -lode -lOPCODE -lfreetype -lftgl
  TARGET = ../samples/bin/world_client
endif

$(OBJDIR)/%.o : %.cc
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.cpp
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.cxx
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.c
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CC) $(CFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.s
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CC) -x assembler-with-cpp $(CPPFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

OBJECTS = \
	$(OBJDIR)/world_client.o \

VPATH =

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS)
	@echo Linking world_client
	-@if [ ! -d $(BINDIR) ]; then mkdir -p $(BINDIR); fi
	-@if [ ! -d $(LIBDIR) ]; then mkdir -p $(LIBDIR); fi
	@$(CXX) -o $@ $(filter-out %.so, $^) $(LDFLAGS)

clean:
	@echo Cleaning world_client
	-@rm -rf $(OUTDIR)/$(TARGET) $(OBJDIR)/*

-include $(OBJECTS:%.o=%.P)

